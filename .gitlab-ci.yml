image: 'rust:latest'

variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo
before_script:
  - apt-get update -qq
  - apt-get install -qq build-essential curl git
cache:
  paths:
    - cargo/
    - target/
    # Redox only:
    - prefix/
    - rust/

format:
  script:
    - rustup default nightly
    - rustup component add rustfmt
    - cargo +nightly fmt --all -- --check

linux:
  image: 'rust:1.35.0'
  script:
    - cargo build
    - FULL=1 make tests

linux:stable:
  script:
    - cargo build
    - TOOLCHAIN= make tests

redox:
  variables:
    CC: "x86_64-unknown-redox-gcc"
  allow_failure: true
  before_script:
    - apt-get update -qq
    - apt-get install -qq tar
    - '[ -e "prefix" ] || (mkdir prefix && wget -O - https://static.redox-os.org/toolchain/x86_64-unknown-redox/gcc-install.tar.gz |
          tar --extract --gzip --directory prefix)'
    - export PATH="$PWD/prefix/bin:$PATH"
    - export RUSTUP_TOOLCHAIN="$PWD/prefix"

        # Prepare xargo
    - cargo install xargo
    - '[ -e "rust" ] || git clone -b redox-2019-04-06 "https://gitlab.redox-os.org/redox-os/rust" --recursive'
    - export CARGO=xargo
    - export XARGO_HOME="$PWD/build/xargo"
    - export XARGO_RUST_SRC="$PWD/rust/src"
    - rustup default nightly-2019-04-06
    - rustup target add x86_64-unknown-redox
  script:
    - make TOOLCHAIN= REDOX=1

pages:
  image: hrektts/mdbook
  stage: deploy
  script:
  - make manual
  - mdbook build -d ../public manual
  artifacts:
    paths:
    - public
  only:
  - master

compare-benchmarks:
  image: rustlang/rust:nightly
  stage: test
  when: manual
  allow_failure: true
  except: [master]
  script:
    - apt-get update && apt-get install -y build-essential libboost-dev jq bc
    - sh ./ci/run_benchmark.sh
  artifacts:
    reports:
      junit: target/report.xml
    paths: [target/criterion]
